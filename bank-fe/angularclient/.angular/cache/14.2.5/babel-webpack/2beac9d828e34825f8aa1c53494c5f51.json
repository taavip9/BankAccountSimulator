{"ast":null,"code":"import { Account } from \"../model/account\";\nimport { Payment } from \"../model/payment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/account-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AppComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.message);\n  }\n}\n\nfunction AppComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.message);\n  }\n}\n\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AppComponent_div_9_div_1_Template, 2, 1, \"div\", 20);\n    i0.ɵɵtemplate(2, AppComponent_div_9_div_2_Template, 2, 1, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isErrorMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isErrorMessage);\n  }\n}\n\nfunction AppComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_tr_26_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(account_r6.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_tr_26_Template_input_ngModelChange_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(account_r6.amount = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"select\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_tr_26_Template_select_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(account_r6.currency = $event);\n    });\n    i0.ɵɵelementStart(7, \"option\");\n    i0.ɵɵtext(8, \"EUR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\");\n    i0.ɵɵtext(10, \"USD\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_26_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.toggleEdit(account_r6));\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_26_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const account_r6 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.deleteAccount(account_r6));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const account_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", account_r6.name)(\"disabled\", !account_r6.isEditable);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", account_r6.amount)(\"disabled\", !account_r6.isEditable);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !account_r6.isEditable)(\"ngModel\", account_r6.currency);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(!account_r6.isEditable ? \"Edit\" : \"Save\");\n  }\n}\n\nfunction AppComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sourceAccount_r13 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", sourceAccount_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", sourceAccount_r13.id, \" \", sourceAccount_r13.name, \"\");\n  }\n}\n\nfunction AppComponent_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const targetAccount_r14 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", targetAccount_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", targetAccount_r14.id, \" \", targetAccount_r14.name, \"\");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(accountService) {\n      this.accountService = accountService;\n      this.accounts = [];\n      this.potentialDepositAccounts = [];\n      this.payment = new Payment();\n      this.message = '';\n      this.targetAccountId = '';\n      this.sourceAccountId = '';\n      this.isErrorMessage = false;\n      this.title = 'Bank account Simulator';\n    }\n\n    displayMessageForFiveSeconds(message) {\n      this.message = message;\n\n      if (this.message) {\n        setTimeout(() => {\n          this.message = '';\n          this.isErrorMessage = false;\n        }, 5000);\n      }\n    }\n\n    onSourceAccountChanged() {\n      console.log(\"test\");\n      this.potentialDepositAccounts = [];\n      this.potentialDepositAccounts.push(...this.accounts);\n      console.log(\"potentialDepositAccounts\", this.potentialDepositAccounts);\n      var account = this.accounts.find(account => parseInt(this.sourceAccountId) === account.id);\n      var index = this.accounts.indexOf(account ? account : new Account());\n\n      if (index > -1) {\n        this.potentialDepositAccounts.splice(index, 1);\n      }\n    }\n\n    ngOnInit() {\n      this.accountService.findAll().subscribe(data => {\n        this.accounts = data;\n        this.potentialDepositAccounts = data;\n      });\n    }\n\n    toggleEdit(account) {\n      if (account.isEditable) {\n        this.saveAccount(account);\n      }\n\n      account.isEditable = !account.isEditable;\n    }\n\n    saveAccount(account) {\n      this.accountService.saveAccount(account).subscribe(data => {\n        account.name = data.name;\n        account.currency = data.currency;\n        account.amount = data.amount;\n        this.displayMessageForFiveSeconds('Successfully edited account ' + account.name);\n      }, error => {\n        this.isErrorMessage = true;\n        this.displayMessageForFiveSeconds('Editing account ' + account.name + ' failed');\n      });\n      this.onSourceAccountChanged();\n    }\n\n    createAccount(account) {\n      this.accountService.createAccount(account).subscribe(data => {\n        account.id = data.id;\n        account.name = data.name;\n        account.currency = data.currency;\n        account.amount = data.amount;\n        this.accounts.push(account);\n        this.onSourceAccountChanged();\n        this.displayMessageForFiveSeconds('Successfully created new account ' + account.name);\n      }, error => {\n        this.isErrorMessage = true;\n        this.displayMessageForFiveSeconds('Creating account ' + account.name + ' failed');\n      });\n      this.onSourceAccountChanged();\n    }\n\n    deleteAccount(account) {\n      this.accountService.deleteAccount(account).subscribe(data => {\n        var index = this.accounts.indexOf(account);\n\n        if (index > -1) {\n          // only splice array when item is found\n          this.accounts.splice(index, 1); // 2nd parameter means remove one item only\n        }\n\n        this.onSourceAccountChanged();\n        this.displayMessageForFiveSeconds('Successfully deleted account ' + account.name);\n      }, error => {\n        this.isErrorMessage = true;\n        this.displayMessageForFiveSeconds('Deleting account ' + account.name + ' failed');\n      });\n    }\n\n    transferFundsBetweenAccounts() {\n      var account1 = this.accounts.find(account => parseInt(this.sourceAccountId) === account.id);\n      var account2 = this.accounts.find(account => parseInt(this.targetAccountId) === account.id);\n      this.payment.sourceAccount = account1 ? account1 : new Account();\n      this.payment.targetAccount = account2 ? account2 : new Account();\n      this.accountService.transferFundsBetweenAccounts(this.payment).subscribe(data => {\n        var sourceAccount = this.accounts.find(account => data.sourceAccount.id === account.id);\n\n        if (sourceAccount) {\n          sourceAccount.amount = data.sourceAccount.amount;\n        }\n\n        var targetAccount = this.accounts.find(account => data.targetAccount.id === account.id);\n\n        if (targetAccount) {\n          targetAccount.amount = data.targetAccount.amount;\n        }\n\n        this.displayMessageForFiveSeconds('Successfully transfered ' + this.payment.paymentAmount + ' ' + sourceAccount?.currency + ' from account ' + sourceAccount?.name + ' to account ' + targetAccount?.name);\n      }, error => {\n        this.isErrorMessage = true;\n        this.displayMessageForFiveSeconds('Transfering ' + this.payment.paymentAmount + ' ' + this.payment.sourceAccount?.currency + ' from account ' + this.payment.sourceAccount?.name + ' to account ' + this.payment.targetAccount?.name + ' failed');\n      });\n    }\n\n    createEmptyAccountRow() {\n      this.createAccount({\n        name: 'Bank account',\n        id: 0,\n        currency: \"EUR\",\n        amount: 1000,\n        isEditable: false\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 51,\n    vars: 8,\n    consts: [[\"role\", \"main\", 1, \"content\"], [1, \"card-title\", \"text-center\"], [1, \"text-center\", \"list-inline\", \"py-3\"], [1, \"list-inline-item\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"text-center\", \"list-inline\", \"py-3\", \"alert-area\"], [4, \"ngIf\"], [1, \"card\", \"my-5\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-body\", \"text-center\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"source-account-option\", \"ngDefaultControl\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"target-account-option\", \"ngDefaultControl\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"value\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"transfer-button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"], [\"type\", \"text\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"form-control\", 3, \"disabled\", \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"source-account-option\", \"ngDefaultControl\", \"\", 3, \"value\"], [\"type\", \"number\", \"name\", \"target-account-option\", \"ngDefaultControl\", \"\", 3, \"value\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 2)(4, \"li\", 3)(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n          return ctx.createEmptyAccountRow();\n        });\n        i0.ɵɵtext(6, \"Add new bank account\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ul\", 5)(8, \"li\", 3);\n        i0.ɵɵtemplate(9, AppComponent_div_9_Template, 3, 2, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"table\", 9)(13, \"thead\", 10)(14, \"tr\")(15, \"th\", 11);\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\", 11);\n        i0.ɵɵtext(18, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\", 11);\n        i0.ɵɵtext(20, \"Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\", 11);\n        i0.ɵɵtext(22, \"Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\", 11);\n        i0.ɵɵtext(24, \"Delete\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, AppComponent_tr_26_Template, 17, 7, \"tr\", 12);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"div\", 7)(28, \"div\", 13)(29, \"h3\", 1);\n        i0.ɵɵtext(30, \"Transfer funds between your accounts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"li\", 3)(32, \"tr\")(33, \"td\");\n        i0.ɵɵtext(34, \"Whithdrawal account:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"td\")(36, \"select\", 14);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_select_change_36_listener() {\n          return ctx.onSourceAccountChanged();\n        })(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_36_listener($event) {\n          return ctx.sourceAccountId = $event;\n        });\n        i0.ɵɵtemplate(37, AppComponent_option_37_Template, 2, 3, \"option\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"tr\")(39, \"td\");\n        i0.ɵɵtext(40, \"Deposit account:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"td\")(42, \"select\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_42_listener($event) {\n          return ctx.targetAccountId = $event;\n        });\n        i0.ɵɵtemplate(43, AppComponent_option_43_Template, 2, 3, \"option\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"tr\")(45, \"td\");\n        i0.ɵɵtext(46, \"Transfer amount:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"td\")(48, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_48_listener($event) {\n          return ctx.payment.paymentAmount = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_49_listener() {\n          return ctx.transferFundsBetweenAccounts();\n        });\n        i0.ɵɵtext(50, \"Transfer funds\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.message != null && ctx.message);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.sourceAccountId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.targetAccountId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.potentialDepositAccounts);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.payment.paymentAmount);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"button{margin-right:5px}.alert-area{height:60px}input{border-bottom:5px solid}#transfer-button{margin-top:10px}\\n\"],\n    encapsulation: 2\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}